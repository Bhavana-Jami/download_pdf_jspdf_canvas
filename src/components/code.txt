import React, { useState, useEffect } from 'react';
import useFetchPosts from '../custom_hooks/useFetchPosts';
import { jsPDF } from 'jspdf';
import html2canvas from 'html2canvas';
import '../styles/PostList.css';

const postNumbers = Array.from({ length: 10 }, (_, i) => `Post ${i + 1}`);

function PostList() {
  const [selectedPosts, setSelectedPosts] = useState([]);
  console.log('selectedPosts: ', selectedPosts);
  const [popupPost, setPopupPost] = useState(null);
  const [bulkPosts, setBulkPosts] = useState({});

  const { postData, loading } = useFetchPosts(popupPost);

  // Fetch posts for bulk download when selected
  useEffect(() => {
    const fetchBulkPosts = async () => {
      const allPosts = {};
      for (const post of selectedPosts) {
        let postNumber = post.slice(-1)
        console.log('postNumber: ', postNumber);
        const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${postNumber}`);;
        const data = await response.json();
        allPosts[post] = data;
      }
      setBulkPosts(allPosts);
      console.log('allPosts: ', allPosts);
    };

    if (selectedPosts.length > 0) fetchBulkPosts();
  }, [selectedPosts]);

  // Handle checkbox selection
  const handleCheckboxChange = (event) => {
    const post = event.target.value;
    setSelectedPosts((prev) =>
      prev.includes(post) ? prev.filter((p) => p !== post) : [...prev, post]
    );
  };

  // Handle post click (open pop-up if not checked)
  const handlePostClick = (post) => {
    console.log('post: ', post);

    // if (!selectedPosts.includes(post)) {
    setPopupPost(post);
    // }
  };

  // Generate PDF for a single post
  const downloadPDF = async () => {
    const content = document.getElementById('pdf-content');
    if (!content) return;

    const canvas = await html2canvas(content, { scale: 2 });
    const imgData = canvas.toDataURL('image/png');
    const pdf = new jsPDF('p', 'mm', 'a4');

    pdf.addImage(imgData, 'PNG', 10, 10, 190, (canvas.height * 190) / canvas.width);
    pdf.save(`${popupPost}_Details.pdf`);
  };

  // Generate bulk PDF
  const downloadBulkPDF = async () => {
    const pdf = new jsPDF();
    let yOffset = 10;

    for (const post of selectedPosts) {
      pdf.setFontSize(14);
      pdf.text(post, 10, yOffset);
      yOffset += 6;

      const postData = bulkPosts[post] || [];
      console.log('bulkPosts[post]: ', bulkPosts[post]);
      postData.forEach((item, index) => {
        pdf.setFontSize(10);
        pdf.text(`${index + 1}. ${item.title}`, 15, yOffset);
        yOffset += 5;
      });

      yOffset += 10; // Add space between posts
    }

    pdf.save('Selected_Posts_Details.pdf');
  };

  return (
    <div className="container">
      <h2>Select Post Statements</h2>

      {/* Bulk Download Button */}
      <button
        onClick={downloadBulkPDF}
        className="bulk-download-btn"
        disabled={selectedPosts.length === 0}
      >
        Download Selected Posts (Bulk)
      </button>

      {/* Post List */}
      <ul className="post-list">
        {postNumbers.map((post, index) => (
          <li key={index} className="post-item">
            <input
              type="checkbox"
              value={post}
              onChange={handleCheckboxChange}
              checked={selectedPosts.includes(post)}
            />
            <span onClick={() => handlePostClick(index + 1)} className="post-name">
              {post}
            </span>
          </li>
        ))}
      </ul>

      {/* Pop-up for Single Post View */}
      {popupPost && (
        <div className="popup">
          <div className="popup-content">
            <h3>{popupPost} Details</h3>
            {loading ? (
              <p>Loading...</p>
            ) : (
              <div id="pdf-content" style={{ backgroundColor: "red", color: "yellow" }}>
                {Object.keys(postData).length !== 0 ?
                  <div>
                    <h2 >{postData.title}</h2>
                    <p>{postData.body}</p>
                  </div>
                  : <p>No details found.</p>}
              </div>
            )}
            <button onClick={downloadPDF} className="download-btn">Download PDF</button>
            <button onClick={() => setPopupPost(null)} className="close-btn">Close</button>
          </div>
        </div>
      )}
    </div>
  );
}

export default PostList;
